/* You can add global styles to this file, and also import other style files */

html, body { height: 100%; }
body { margin: 0; font-family: Roboto, "Helvetica Neue", sans-serif; }


/*CONFIGURABLE THEME - FOR LATER


// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$ticket-management-system-primary: mat.define-palette(mat.$indigo-palette);
$ticket-management-system-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$ticket-management-system-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$ticket-management-system-theme: mat.define-light-theme((
  color: (
    primary: $ticket-management-system-primary,
    accent: $ticket-management-system-accent,
    warn: $ticket-management-system-warn,
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($ticket-management-system-theme);

/* You can add global styles to this file, and also import other style files */

/* to be replaced with grid.scss */
.grid {
  box-sizing: border-box;
  max-width: 1280px;
  margin: auto;
  padding: 12px 48px;
  display: flex;
  flex-wrap: wrap;
  flex: 0 0 100%;
  align-items: stretch;

  &.no-vertical-padding {
      padding-top: 0;
      padding-bottom: 0;
  }

  &.no-horizontal-padding {
      padding-left: 0;
      padding-right: 0;
  }

  [class*="block"] {
      box-sizing: border-box;
      padding: 12px;

      .content {
          box-sizing: border-box;
          flex: 0 0 100%;
          max-width: 100%;
      }
  }

  .block-full {
      flex: 0 0 100%;
      max-width: 100%;
  }

  .block-half {
      flex: 0 0 50%;
      max-width: 50%;
  }

  .block-quarter {
      flex: 0 0 25%;
      max-width: 25%;
  }
}

@media screen and (min-width: 721px) and (max-width: 1080px) {
  .grid {
      padding: 16px 28px;

      [class*="block"] {
          padding: 8px;
      }

      .block-half {
          flex: 0 0 100%;
          max-width: 100%;
      }

      .block-quarter {
          flex: 0 0 50%;
          max-width: 50%;
      }
  }
}

@media screen and (max-width: 720px) {
  .grid {
      padding: 12px 16px;

      [class*="block"] {
          padding: 4px;
      }

      .block-half {
          flex: 0 0 100%;
          max-width: 100%;
      }

      .block-quarter {
          flex: 0 0 100%;
          max-width: 100%;
      }
  }
}
